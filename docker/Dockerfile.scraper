# ---- Base image for runtime ----
FROM mcr.microsoft.com/dotnet/runtime:8.0 AS base

# Install necessary packages for Chromium/Puppeteer and Chromium browser itself
RUN apt-get update && apt-get install -y \
    chromium \
    wget \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    libgbm1 \
    libnss3 \
    libxshmfence1 \
    libxcb1 \
    libxss1 \
    libxtst6 \
    xdg-utils \
    --no-install-recommends && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# ---- Build image ----
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy project files
COPY ["AutomaticScraperConsoleApp/AutomaticScraperConsoleApp.csproj", "AutomaticScraperConsoleApp/"]
COPY ["APIIntegrationLibrary/APIIntegrationLibrary.csproj", "APIIntegrationLibrary/"]
COPY ["ScraperLibrary/ScraperLibrary.csproj", "ScraperLibrary/"]
COPY ["TilbudsAvisLibrary/TilbudsAvisLibrary.csproj", "TilbudsAvisLibrary/"]

# Restore dependencies
RUN dotnet restore "AutomaticScraperConsoleApp/AutomaticScraperConsoleApp.csproj"

# Copy all source files
COPY . .

# Build
WORKDIR "/src/AutomaticScraperConsoleApp"
RUN dotnet build "AutomaticScraperConsoleApp.csproj" -c Release -o /app/build

# ---- Publish image ----
FROM build AS publish
RUN dotnet publish "AutomaticScraperConsoleApp.csproj" -c Release -o /app/publish /p:UseAppHost=false

# ---- Final runtime image ----
FROM base AS final
WORKDIR /app

# Copy published app from build stage
COPY --from=publish /app/publish .

# Entrypoint for your app
ENTRYPOINT ["dotnet", "AutomaticScraperConsoleApp.dll"]
